<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BloodType" xml:space="preserve">
    <value>Blood Group</value>
  </data>
  <data name="Certifications" xml:space="preserve">
    <value>Certifications</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="Convictions" xml:space="preserve">
    <value>Convictions</value>
  </data>
  <data name="CountryOfBirth" xml:space="preserve">
    <value>Country Of Birth</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="DateOfBirthReq" xml:space="preserve">
    <value>date of birth is required</value>
  </data>
  <data name="Dependents" xml:space="preserve">
    <value>Dependents</value>
  </data>
  <data name="DisabilityDescription" xml:space="preserve">
    <value>Disability Description</value>
  </data>
  <data name="DisabilityDescriptionLength" xml:space="preserve">
    <value>disability description must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="DisabilityExist" xml:space="preserve">
    <value>Disability Status</value>
  </data>
  <data name="DrivingLicense" xml:space="preserve">
    <value>Driving License</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="EmployeeGeneralInfo" xml:space="preserve">
    <value>Employee General Info</value>
  </data>
  <data name="EmployeeStatus" xml:space="preserve">
    <value>Employee Status</value>
  </data>
  <data name="Experiences" xml:space="preserve">
    <value>Experiences</value>
  </data>
  <data name="FamilyDetails" xml:space="preserve">
    <value>Family Details</value>
  </data>
  <data name="FatherName" xml:space="preserve">
    <value>Father Name</value>
  </data>
  <data name="FatherNameL2" xml:space="preserve">
    <value>Father Name In Arabic</value>
  </data>
  <data name="FatherNameL2Length" xml:space="preserve">
    <value>arabic father name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="FatherNameLength" xml:space="preserve">
    <value>father name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="FatherNameReq" xml:space="preserve">
    <value>father name is required</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameL2" xml:space="preserve">
    <value>First Name In Arabic</value>
  </data>
  <data name="FirstNameL2Length" xml:space="preserve">
    <value>arabic first name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="FirstNameLength" xml:space="preserve">
    <value>first name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="FirstNameReq" xml:space="preserve">
    <value>first name is required</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="IdentificationNo" xml:space="preserve">
    <value>Identification Number</value>
  </data>
  <data name="IdentificationNoLength" xml:space="preserve">
    <value>identification number must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameL2" xml:space="preserve">
    <value>Last Name In Arabic</value>
  </data>
  <data name="LastNameL2Length" xml:space="preserve">
    <value>arabic last name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="LastNameLength" xml:space="preserve">
    <value>last name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="LastNameReq" xml:space="preserve">
    <value>last name is required</value>
  </data>
  <data name="LoginName" xml:space="preserve">
    <value>Login Name</value>
  </data>
  <data name="LoginNameLength" xml:space="preserve">
    <value>login name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="LoginNameReq" xml:space="preserve">
    <value>login name is required</value>
  </data>
  <data name="MaritalStatus" xml:space="preserve">
    <value>Marital Status</value>
  </data>
  <data name="MaritalStatusReq" xml:space="preserve">
    <value>marital status is required</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="MiddleNameL2" xml:space="preserve">
    <value>Middle Name In Arabic</value>
  </data>
  <data name="MiddleNameL2Length" xml:space="preserve">
    <value>arabic middle name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="MiddleNameLength" xml:space="preserve">
    <value>middle name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="MilitaryService" xml:space="preserve">
    <value>Military Service</value>
  </data>
  <data name="MilitaryStatus" xml:space="preserve">
    <value>Military Service Status</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
  <data name="MotherName" xml:space="preserve">
    <value>Mother Name</value>
  </data>
  <data name="MotherNameL2" xml:space="preserve">
    <value>Mother Name In Arabic</value>
  </data>
  <data name="MotherNameL2Length" xml:space="preserve">
    <value>arabic mother name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="MotherNameLength" xml:space="preserve">
    <value>mother name must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="MotherNameReq" xml:space="preserve">
    <value>mother name is required</value>
  </data>
  <data name="NameInFirstLanguage" xml:space="preserve">
    <value>Name In First Language</value>
  </data>
  <data name="NameInSecondLanguage" xml:space="preserve">
    <value>Name In Second Language</value>
  </data>
  <data name="NationalitiesAndBirthInformation" xml:space="preserve">
    <value>Nationalities And Birth Information</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Main Nationality</value>
  </data>
  <data name="NationalityReq" xml:space="preserve">
    <value>nationality is required</value>
  </data>
  <data name="NoEmployeeSelectedMessage" xml:space="preserve">
    <value>No Employee Record Selected, Select/Add One To Proceed</value>
  </data>
  <data name="NoOfChildren" xml:space="preserve">
    <value>Number Of Children</value>
  </data>
  <data name="NoOfChildrenReq" xml:space="preserve">
    <value>number of children is required</value>
  </data>
  <data name="NoOfDependents" xml:space="preserve">
    <value>Number Of Dependents</value>
  </data>
  <data name="NoOfDependentsReq" xml:space="preserve">
    <value>number of dependents is required</value>
  </data>
  <data name="OtherNationality" xml:space="preserve">
    <value>Other Nationality</value>
  </data>
  <data name="Passports" xml:space="preserve">
    <value>Passports</value>
  </data>
  <data name="PersonalInformation" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="PersonalPhoto" xml:space="preserve">
    <value>Personal Photo</value>
  </data>
  <data name="PlaceOfBirth" xml:space="preserve">
    <value>Place of Birth</value>
  </data>
  <data name="PlaceOfBirthReq" xml:space="preserve">
    <value>place of birth is required</value>
  </data>
  <data name="Positions" xml:space="preserve">
    <value>Positions</value>
  </data>
  <data name="Race" xml:space="preserve">
    <value>Race</value>
  </data>
  <data name="Religion" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="Residencies" xml:space="preserve">
    <value>Residencies</value>
  </data>
  <data name="SelectEmployeeMessage" xml:space="preserve">
    <value>Employees List - Select Row For Details</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="SocialInsuranceNo" xml:space="preserve">
    <value>Social Insurance Number</value>
  </data>
  <data name="SocialInsuranceNoLength" xml:space="preserve">
    <value>social insurance number must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="SocialInsuranceNoStatus" xml:space="preserve">
    <value>Social Insurance Status</value>
  </data>
  <data name="SocialSecurityNo" xml:space="preserve">
    <value>Social Security Number</value>
  </data>
  <data name="SocialSecurityNoLength" xml:space="preserve">
    <value>social security number must be a text with a maximum length of 50 characters</value>
  </data>
  <data name="Spouse" xml:space="preserve">
    <value>Spouse</value>
  </data>
  <data name="TrainingSkills" xml:space="preserve">
    <value>Training Skills</value>
  </data>
</root>