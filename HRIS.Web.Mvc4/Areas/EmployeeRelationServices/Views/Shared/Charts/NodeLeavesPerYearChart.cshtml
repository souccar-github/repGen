@using Project.Web.Mvc4.Helpers
@using Project.Web.Mvc4.Helpers.Resource

<div class="chart chart-width-full">

    <div class="chart-params">
        <div id="year-nyc" style="width:48%;">
            <div class="control control-year-nyc">
                <div class="k-edit-label">
                    <label for="yearNyc">@GlobalResource.Year</label>
                </div>
                <div data-container-for="yearNyc" class="k-edit-field">
                    <input id="yearNyc" onkeyup="onKeyupYearNyc()" />
                </div>

            </div>
        </div>
        <div id="node-nyc" style="width:48%;">
            <div class="control control-node-nyc">
                <div class="k-edit-label">
                    <label for="nodeNyc">@GlobalResource.Node</label>
                </div>
                <div data-container-for="nodeNyc" class="k-edit-field">
                    <input id="nodeNyc" />
                </div>

            </div>
        </div>
    </div>

    <div id="node-leaves-per-year-chart" class="container-chart"></div>
</div>

<script type="text/javascript">

    function getNodeLeavesPerYearChart() {
        $('#year-nyc').css('float', $pageDir);
        $('#node-nyc').css('float', $pageDir);

        var date = new Date();
        var year = date.getFullYear();
        $('#yearNyc').val(year);

        generateNodeDropdown();
    }

    function onKeyupYearNyc() {
        var year = $('#yearNyc').val();
        if (year.length == 4) {

            var nodeDropdownlist = $("#nodeNyc").data("kendoDropDownList");
            getNodeLeavesPerYear(nodeDropdownlist.value(), year);
        }

    }

    function generateNodeDropdown() {

        $("#nodeNyc").kendoDropDownList({
            filter: "contains",
            optionLabel: "Select Node ...",
            autoBind: true,
            minLength: 1,
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: {
                type: "json",
                //serverFiltering: true,
                transport: {
                    read: {
                        url: "@Url.Action("GetAllNodes", "Dashboard", new { area = "EmployeeRelationServices" })"
                    }
                }
            },
            dataBound: function () {

                if (this.select() === 0) {
                    this.select(1);
                    this.trigger("change");
                }
            },
            change: function () {
                
                var nodeId = this.value();
                var year = $('#yearNyc').val();
                getNodeLeavesPerYear(nodeId, year);
            }
        });


    }

    function getNodeLeavesPerYear(nodeId, year) {
        window.Souccar.ajax('@Url.Action("GetNodeLeavesForYear", "Dashboard", new { area = "EmployeeRelationServices" })',
            { nodeId: nodeId, year: year },
            successFunc,
            erorrFunc);
        function successFunc(data) {
            if (data.Success) {
                generateNodeLeavesPerYearChart(data.Data);
            }
        }
        function erorrFunc() {
            console.log("Error / func:getLeaveSettings");
        }
    }

    function generateNodeLeavesPerYearChart(data) {
        
        var dataSource = [];
        for (var i = 0; i < data.length; i++) {
            dataSource.push({ "name": data[i].Key, "data": data[i].Value });
        }
        console.log(dataSource);
        Highcharts.chart('node-leaves-per-year-chart', {
            chart: {
                type: 'line'
            },
            title: {
                text: '@EmployeeRelationServicesLocalizationHelper.GetResource(EmployeeRelationServicesLocalizationHelper.LeavesPerYear)'
            },
            xAxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
            },
            yAxis: {
                title: {
                    text: '@EmployeeRelationServicesLocalizationHelper.GetResource(EmployeeRelationServicesLocalizationHelper.LeavesCount)'
                }
            },
            //legend: {
            //    layout: 'vertical',
            //    align: 'right',
            //    verticalAlign: 'middle'
            //},
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    },
                    enableMouseTracking: true
                }
            },
            colors: getDashboardColors(),
            series: dataSource
        });
    }
</script>